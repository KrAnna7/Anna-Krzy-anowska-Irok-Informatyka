--1
/* Za pomocą DROP TABLE usuwam tabele.
  Za pomocą CASCADE CONSTRAINS usuwam relacje między tabelami oparte na ich kluczach głównych.*/
  DROP TABLE klient
  CASCADE CONSTRAINTS;
  
  DROP TABLE pozycja
  CASCADE CONSTRAINTS;
  
  
  DROP TABLE produkt
  CASCADE CONSTRAINTS;
  
  DROP TABLE region
  CASCADE CONSTRAINTS;
  
  DROP TABLE zamówienia
  CASCADE CONSTRAINTS;
--2
-- Generated by Oracle SQL Developer Data Modeler 17.4.0.355.2131
--   at:        2018-05-23 20:33:15 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE customers (
    customer_id   VARCHAR2(20) NOT NULL,
    first_name    VARCHAR2(25) NOT NULL,
    last_name     VARCHAR2(25) NOT NULL,
    phone         VARCHAR2(25) NOT NULL,
    address       VARCHAR2(40),
    city          VARCHAR2(25),
    state         VARCHAR2(20),
    country       VARCHAR2(30),
    zip_code      VARCHAR2(10),
    comments      VARCHAR2(255)
);

ALTER TABLE customers ADD CONSTRAINT customers_pk PRIMARY KEY ( customer_id );

CREATE TABLE products (
    product_id    NUMBER(7) NOT NULL,
    name          VARCHAR2(50),
    producer      VARCHAR2(30),
    description   VARCHAR2(255),
    image_id      NUMBER(7),
    price         NUMBER(11,2) NOT NULL
);

ALTER TABLE products ADD CONSTRAINT products_pk PRIMARY KEY ( product_id );

CREATE TABLE transactions (
    transactions_id         NUMBER(7) NOT NULL,
    transaction_date        DATE NOT NULL,
    transaction_type        NUMBER(7) NOT NULL,
    transaction_value       NUMBER(11,2) NOT NULL,
    customers_customer_id   VARCHAR2(20) NOT NULL,
    products_product_id     NUMBER(7) NOT NULL
);

ALTER TABLE transactions ADD CONSTRAINT transactions_pk PRIMARY KEY ( transactions_id );

ALTER TABLE transactions
    ADD CONSTRAINT transactions_customers_fk FOREIGN KEY ( customers_customer_id )
        REFERENCES customers ( customer_id );

ALTER TABLE transactions
    ADD CONSTRAINT transactions_products_fk FOREIGN KEY ( products_product_id )
        REFERENCES products ( product_id );
--3
/*Poniższe polecenie wyświetla nazwy wszystkich tabel danego użytkownika */
SELECT table_name FROM user_tables;
--4
/* Za pomocą polecenia DESCRIBE wyświetlam informcaje o poszczególnych tabelach 
(struktury tabel przechowujące informacje tj. poszczególne kolumny wchodzące w jej skład,
typ i dlugość danych oraz czy są one obowiązkowe do wypenienia)*/

DESCRIBE transactions;
DESCRIBE products;
DESCRIBE customers;

--5
SELECT * FROM DICTIONARY;
/*Za pomocą polecenia 
--SELECT * FROM DICTIONARY;
znalazłam tabele: user_cons_columns i user_constraints */
SELECT * FROM user_cons_columns;
SELECT * FROM user_constraints;
/*Za pomocą polecenia SELECT wybieram nazwę ograniczenia, nazwę tabeli, nazwę kolumny, typ ograniczenia 
oraz search_condition (warunek wyszukiwania dla ograniczeń check) z wcześniej wybranych tabel: user_constraints, user_cons_columns*/
SELECT 
  t1.constraint_name,
  t1.table_name,
  t2.column_name,
  t1.constraint_type,
  t1.search_condition  
FROM user_constraints t1, user_cons_columns t2
WHERE t1.table_name IN (SELECT table_name FROM user_tables) 
  AND
  t1.constraint_name=t2.constraint_name;
 /*W klauzuli WHERE za pomocą operatora IN wybieram tylko te tabele, które należą 
do danego użytkownika- w tym celu używam podzapytania wyszukującego nazwy tabel(z zadania 3). Do złączenia tabel wykorzystałam kolumnę constraint_name 
(aby uniknąć iloczynu kartezjańskiego).*/
 --6
 /*Poleceniem CREATE tworzę tabelę, której kluczem głównym jest id_pracownika.*/
    --ograniczenie kolumnowe (klucz obcy tworzony w momencie tworzenia kolumny)
CREATE TABLE payments
(
  pay_id NUMBER(3) NOT NULL,
    CONSTRAINT payment_PK PRIMARY KEY (pay_id),
  pay_id_transactions NUMBER(3) NOT NULL,
    CONSTRAINT transaction_id_fk
    REFERENCES transactions (transactions_id),
  pay_date DATE  NOT NULL,
  pay_ammount NUMBER(6,2) NOT NULL,
  pay_type VARCHAR(20) NOT NULL
  
);

  --ograniczenie tablicowe (klucz obcy tworzony po utworzeniu tabeli)
CREATE TABLE payments
(
  pay_id NUMBER(3) NOT NULL,
    CONSTRAINT payment_PK PRIMARY KEY (pay_id,pay_id_transactions),
    pay_id_transactions NUMBER(3) NOT NULL,
  pay_date DATE NOT NULL,
  pay_ammount NUMBER(6,2) NOT NULL,
  pay_type VARCHAR(20) NOT NULL
    CONSTRAINT transaction_id_fk
    FOREIGN KEY (pay_id_transactions)
    REFERENCES transactions (transactions_id)
);

  --metoda ALTER TABLE
CREATE TABLE payments
(
  pay_id NUMBER(3) NOT NULL,
    
    pay_id_transactions NUMBER(3) NOT NULL,
  pay_date DATE NOT NULL,
  pay_ammount NUMBER(6,2) NOT NULL,
  pay_type VARCHAR(20) NOT NULL
  );
  
 ALTER TABLE payments
ADD CONSTRAINT payment_PK PRIMARY KEY (pay_id,pay_id_transactions);
ALTER TABLE payments
ADD CONSTRAINT transaction_id_fk
FOREIGN KEY (pay_id_transactions)
REFERENCES transactions (transactions_id);
--7
/*Aby móc dodać "wewnętrzne" ograniczenie klucza obcego dodaję najpierw do tabeli payments
kolumnę przechowującą identyfikator pierwszej wpłaty. Następnie za pomocą polecenia ALTER TABLE dodaję
klucz obcy typu "same do siebie". Klucz ten odnosi się do dwóch kolumn.*/
ALTER TABLE payments ADD (id_first_pay NUMBER(3) NOT NULL);

ALTER TABLE payments
ADD CONSTRAINT first_pay_fk
FOREIGN KEY (id_first_pay, pay_id_transactions)
REFERENCES payments (pay_id, pay_id_transactions);
--8
INSERT INTO customers
    VALUES (1,'Jan', 'Kowalski', 555268111, 'Pawia 16/2', 'Lublin', 'Lubelskie', 'Polska', '20-521', null);
INSERT INTO customers
    VALUES (2,'Zuzanna', 'Nowak', 604325874, 'Królewska 11', 'Poznań', 'Wielkopolskie', 'Polska', '60-138', null);
INSERT INTO customers
    VALUES (3,'Olga', 'Poznańska', 505505112, 'Szafirowa 17/28', 'Warszawa', 'Mazowieckie', 'Polska', '00-031', null);
INSERT INTO customers
    VALUES (4,'Anna', 'Jarocka', 777564113, 'Smocza 1', 'Kraków', 'Małopolskie', 'Polska', '30-039', null);
INSERT INTO customers
    VALUES (5,'Kamil', 'Starowski', 514525478, 'Klonowa 2B/14', 'Płock', 'Mazowieckie', 'Polska', '09-407', null);
INSERT INTO customers
    VALUES (6,'Barbara', 'Lach', 698475215, 'Hutnicza 7/49', 'Katowice', 'Śląskie', 'Polska', '40-006', null);
INSERT INTO customers
    VALUES (7,'Tomasz', 'Podolski', 514236879, 'Wspólna 17', 'Toruń', 'Kujawsko-Pomorskie', 'Polska', '87-162', null);
INSERT INTO customers
    VALUES (8,'Waldemar', 'Kiepski', 777898145, 'Kwiatowa 13', 'Pacanów', 'Świętokrzyskie', 'Polska', '28-133', null);

INSERT INTO products
    VALUES (1,'Aloe anti-aging face cream','Forever Living Products',null, 1212, 49.99);
INSERT INTO products 
    VALUES (2,'Aloe Vera Gel','Forever Living Products',null, 1213, 111.00);
INSERT INTO products 
    VALUES (3,'Aloe Shave','Forever Living Products',null, 1214, 82.00 );
INSERT INTO products 
    VALUES (4,'Forever Sun Lips','Forever Living Products',null, 1215 , 23.99);
INSERT INTO products 
    VALUES (5,'BB Cream nude','Sonya',null, 1216, 56.00);
INSERT INTO products 
    VALUES (6,'Rehydrating Toner','Sonya',null, 1217, 39.99);
INSERT INTO products 
    VALUES (7,'Aloe Heat Lotion','Forever Living Products',null, 1210, 77.00);
INSERT INTO products 
    VALUES (8,'Aloe Propolis Creme','Forever Living Products',null, 1208, 102.00);
INSERT INTO products 
    VALUES (9,'Sunless Tanning Lotion','Sonya',null, 1218, 45.99);
INSERT INTO products 
    VALUES (10,'Relaxation Bath Salts','Sonya',null, 1219, 98.00);
INSERT INTO products 
    VALUES (11,'Relaxation Shower Gel','Sonya',null, 1220, 81.00);

INSERT INTO transactions
VALUES (1,TO_DATE('02-09-2017','dd-mm-yyyy'), 1, 56.00, 1, 7, 5);
INSERT INTO transactions
VALUES (2,TO_DATE('14-01-2018','dd-mm-yyyy'), 2, 111.00, 1, 2, 2);
INSERT INTO transactions
VALUES (3,TO_DATE('05-05-2018','dd-mm-yyyy'), 1, 45.99, 2, 8, 9);
INSERT INTO transactions
VALUES (4,TO_DATE('24-11-2017','dd-mm-yyyy'), 1, 23.99, 2, 4, 4);
INSERT INTO transactions
VALUES (5,TO_DATE('19-03-2018','dd-mm-yyyy'), 2, 102.00, 1, 1, 8);
INSERT INTO transactions
VALUES (6,TO_DATE('02-12-2017','dd-mm-yyyy'), 1, 82.00, 1, 3, 3);
INSERT INTO transactions
VALUES (7,TO_DATE('25-03-2018','dd-mm-yyyy'), 1, 49.99, 1, 5, 1);
INSERT INTO transactions
VALUES (8,TO_DATE('11-04-2018','dd-mm-yyyy'), 1, 82.00, 1, 7, 3);
INSERT INTO transactions
VALUES (9,TO_DATE('13-05-2018','dd-mm-yyyy'), 1, 23.99, 2, 2, 4);
INSERT INTO transactions
VALUES (10,TO_DATE('20-05-2018','dd-mm-yyyy'), 2, 98.00, 1, 8, 10);

INSERT INTO payments
VALUES (1, 1, TO_DATE('02-09-2017','dd-mm-yyyy'), 56.00 , 1, 1);
INSERT INTO payments
VALUES (2, 2, TO_DATE('14-01-2018','dd-mm-yyyy'), 37.00 , 1, 2);
INSERT INTO payments
VALUES (3, 2, TO_DATE('14-02-2018','dd-mm-yyyy'), 37.00 , 1, 2);
INSERT INTO payments
VALUES (4, 2, TO_DATE('14-03-2018','dd-mm-yyyy'), 37.00 , 1, 2);
INSERT INTO payments
VALUES (5, 3, TO_DATE('19-03-2018','dd-mm-yyyy'), 102.00 , 1, 5);
INSERT INTO payments
VALUES (6, 4, TO_DATE('24-11-2017','dd-mm-yyyy'), 23.99 , 2, 6);
INSERT INTO payments
VALUES (7, 5, TO_DATE('19-03-2018','dd-mm-yyyy'), 34.00 , 1, 7);
INSERT INTO payments
VALUES (8, 5, TO_DATE('19-04-2018','dd-mm-yyyy'), 34.00 , 1, 7);
INSERT INTO payments
VALUES (9, 5, TO_DATE('19-05-2018','dd-mm-yyyy'), 34.00 , 1, 7);
INSERT INTO payments
VALUES (10, 6, TO_DATE('02-12-2017','dd-mm-yyyy'), 82.00 , 1, 10);
INSERT INTO payments
VALUES (11, 7, TO_DATE('25-03-2018','dd-mm-yyyy'), 49.99 , 1, 11);
INSERT INTO payments
VALUES (12, 8, TO_DATE('11-04-2018','dd-mm-yyyy'), 82.00 , 1, 12);
INSERT INTO payments
VALUES (13, 9, TO_DATE('13-05-2018','dd-mm-yyyy'), 23.99 , 2, 13);
INSERT INTO payments
VALUES (14, 10, TO_DATE('20-05-2018','dd-mm-yyyy'), 33.00 , 1, 14);
INSERT INTO payments
VALUES (15, 10, TO_DATE('20-06-2018','dd-mm-yyyy'), 33.00 , 1, 14);
INSERT INTO payments
VALUES (16, 10, TO_DATE('20-07-2018','dd-mm-yyyy'), 32.00 , 1, 14);

--9
SELECT * FROM customers;
SELECT * FROM products;
SELECT * FROM transactions;
SELECT * FROM payments;

--10
UPDATE customers
SET customer_id = NULL
WHERE customer_id = 5; /* nie zostało zaktualizowane, gdyż customer_id nie może być równy NULL  */

UPDATE products
SET price = price * 1.1
WHERE price < 40.00;
/* zwiększam o 10% cenę sprzedaży produktów, których wyjściowa cena jest mniejsza niż 40zł*/

UPDATE transactions
SET transaction_value = transaction_value * 0.95
WHERE customers_customer_id = 8;
/* zmniejszyłam wartość transakcji o 5% dla klienta o id =8  */

UPDATE payments
SET pay_ammount = pay_ammount * 0.95
WHERE pay_id_transactions = 5; 

--11

SELECT * FROM customers;
SELECT * FROM products;
SELECT * FROM transactions;
SELECT * FROM payments;

--12
CREATE TABLE product 
(id                         NUMBER(7) 
   CONSTRAINT product_id_nn NOT NULL,
 name                       VARCHAR2(50) 
   CONSTRAINT product_name_nn NOT NULL,
 short_desc                 VARCHAR2(255),
 longtext_id                NUMBER(7),
 image_id                   NUMBER(7),
 suggested_whlsl_price      NUMBER(11, 2),
 whlsl_units                VARCHAR2(25),
     CONSTRAINT product_id_pk PRIMARY KEY (id),
     CONSTRAINT product_name_uk UNIQUE (name));

INSERT INTO product VALUES (
   10011, 'Bunny Boot',
   'Beginner''s ski boot',
   518, 1001,
   150, NULL);
INSERT INTO product VALUES (
   10012, 'Ace Ski Boot',
   'Intermediate ski boot',
   519, 1002,
   200, NULL);
INSERT INTO product VALUES (
   10013, 'Pro Ski Boot',
   'Advanced ski boot',
   520, 1003,
   410, NULL);
INSERT INTO product VALUES (
   10021, 'Bunny Ski Pole',
   'Beginner''s ski pole',
   528, 1011,
   16.25, NULL);
INSERT INTO product VALUES (
   10022, 'Ace Ski Pole',
   'Intermediate ski pole',
   529, 1012,
   21.95, NULL);
INSERT INTO product VALUES (
   10023, 'Pro Ski Pole',
   'Advanced ski pole',
   530, 1013,
   40.95, NULL);
INSERT INTO product VALUES (
   20106, 'Junior Soccer Ball',
   'Junior soccer ball',
   613, NULL,
   11, NULL);
INSERT INTO product VALUES (
   20108, 'World Cup Soccer Ball',
   'World cup soccer ball',
   615, NULL,
   28, NULL);
INSERT INTO product VALUES (
   20201, 'World Cup Net',
   'World cup net',
   708, NULL,
   123, NULL);
INSERT INTO product VALUES (
   20510, 'Black Hawk Knee Pads',
   'Knee pads, pair',
   1017, NULL,
   9, NULL);
INSERT INTO product VALUES (
   20512, 'Black Hawk Elbow Pads',
   'Elbow pads, pair',
   1019, NULL,
   8, NULL);
INSERT INTO product VALUES (
   30321, 'Grand Prix Bicycle',
   'Road bicycle',
   828, 1291,
   1669, NULL);
INSERT INTO product VALUES (
   30326, 'Himalaya Bicycle',
   'Mountain bicycle',
   833, 1296,
   582, NULL);
INSERT INTO product VALUES (
   30421, 'Grand Prix Bicycle Tires',
   'Road bicycle tires',
   927, NULL,
   16, NULL);
INSERT INTO product VALUES (
   30426, 'Himalaya Tires',
   'Mountain bicycle tires',
   933, NULL,
   18.25, NULL);
INSERT INTO product VALUES (
   30433, 'New Air Pump',
   'Tire pump',
   940, NULL,
   20, NULL);
INSERT INTO product VALUES (
   32779, 'Slaker Water Bottle',
   'Water bottle',
   1286, NULL,
   7, NULL);
INSERT INTO product VALUES (
   32861, 'Safe-T Helmet',
   'Bicycle helmet',
   1368, 1829,
   60, NULL);
INSERT INTO product VALUES (
   40421, 'Alexeyer Pro Lifting Bar',
   'Straight bar',
   928, 1381,
   65, NULL);
INSERT INTO product VALUES (
   40422, 'Pro Curling Bar',
   'Curling bar',
   929, 1382,
   50, NULL);
INSERT INTO product VALUES (
   41010, 'Prostar 10 Pound Weight',
   'Ten pound weight',
   517, NULL,
   8, NULL);
INSERT INTO product VALUES (
   41020, 'Prostar 20 Pound Weight',
   'Twenty pound weight',
   527, NULL,
   12, NULL);
INSERT INTO product VALUES (
   41050, 'Prostar 50 Pound Weight',
   'Fifty pound weight',
   557, NULL,
   25, NULL);
INSERT INTO product VALUES (
   41080, 'Prostar 80 Pound Weight',
   'Eighty pound weight',
   587, NULL,
   35, NULL);
INSERT INTO product VALUES (
   41100, 'Prostar 100 Pound Weight',
   'One hundred pound weight',
   607, NULL,
   45, NULL);
INSERT INTO product VALUES (
   50169, 'Major League Baseball',
   'Baseball',
   676, 1119,
   4.29, NULL);
INSERT INTO product VALUES (
   50273, 'Chapman Helmet',
   'Batting helmet',
   780, 1223,
   22.89, NULL);
INSERT INTO product VALUES (
   50417, 'Griffey Glove',
   'Outfielder''s glove',
   924, 1367,
   80, NULL);
INSERT INTO product VALUES (
   50418, 'Alomar Glove',
   'Infielder''s glove',
   925, 1368,
   75, NULL);
INSERT INTO product VALUES (
   50419, 'Steinbach Glove',
   'Catcher''s glove',
   926, 1369,
   80, NULL);
INSERT INTO product VALUES (
   50530, 'Cabrera Bat',
   'Thirty inch bat',
   1037, 1480,
   45, NULL);
INSERT INTO product VALUES (
   50532, 'Puckett Bat',
   'Thirty-two inch bat',
   1039, 1482,
   47, NULL);
INSERT INTO product VALUES (
   50536, 'Winfield Bat',
   'Thirty-six inch bat',
   1043, 1486,
   50, NULL);
COMMIT;
--13
INSERT INTO products (product_id, name, description, image_id,price)
  SELECT id+11, name, short_desc, image_id ,suggested_whlsl_price FROM product;

--14
SELECT * from PRODUCTS;


